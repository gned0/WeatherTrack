{
  "openapi": "3.0.0",
  "info": {
    "title": "WeatherTrack",
    "version": "1.0.0",
    "description": "API for the WeatherTrack system"
  },
  "servers": [
    {
      "url": "http://localhost:3000"
    }
  ],
  "paths": {
    "/auth/register": {
      "post": {
        "summary": "Register a new user",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User registered successfully"
          },
          "400": {
            "description": "Username or email already exists"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "summary": "Log in to get a JWT token",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "username": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  }
                },
                "required": [
                  "username",
                  "password"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Logged in successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "auth": {
                      "type": "boolean"
                    },
                    "token": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Invalid username or password"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/data/latest": {
      "get": {
        "summary": "Get latest data",
        "parameters": [
          {
            "in": "query",
            "name": "location",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "Location"
          },
          {
            "in": "query",
            "name": "attribute",
            "schema": {
              "type": "string"
            },
            "required": false,
            "description": "Attribute name"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Data"
                }
              }
            }
          },
          "400": {
            "description": "Missing required query parameter"
          },
          "404": {
            "description": "No data found for the specified location"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/data/max": {
      "get": {
        "summary": "Get max data in timespan",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "location",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "Location"
          },
          {
            "in": "query",
            "name": "attribute",
            "schema": {
              "type": "string"
            },
            "required": false,
            "description": "Attribute name"
          },
          {
            "in": "query",
            "name": "timespan",
            "schema": {
              "type": "number"
            },
            "required": false,
            "description": "Timespan in hours"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Data"
                }
              }
            }
          },
          "400": {
            "description": "Missing required query parameter"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "No data found for the specified location and timespan"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/data/avg": {
      "get": {
        "summary": "Get average data in timespan",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "location",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "Location"
          },
          {
            "in": "query",
            "name": "attribute",
            "schema": {
              "type": "string"
            },
            "required": false,
            "description": "Attribute name"
          },
          {
            "in": "query",
            "name": "timespan",
            "schema": {
              "type": "number"
            },
            "required": false,
            "description": "Timespan in hours"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "average": {
                      "type": "object"
                    },
                    "timespan": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Missing required query parameter"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "No data found for the specified location and timespan"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/data/min": {
      "get": {
        "summary": "Get minimum data in timespan",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "location",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "Location"
          },
          {
            "in": "query",
            "name": "attribute",
            "schema": {
              "type": "string"
            },
            "required": false,
            "description": "Attribute name"
          },
          {
            "in": "query",
            "name": "timespan",
            "schema": {
              "type": "number"
            },
            "required": false,
            "description": "Timespan in hours"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Data"
                }
              }
            }
          },
          "400": {
            "description": "Missing required query parameter"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "No data found for the specified location and timespan"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/data": {
      "post": {
        "summary": "Create new data",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Data"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Data"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/locations": {
      "get": {
        "summary": "Get all locations",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Location"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/data/span": {
      "get": {
        "summary": "Get data in timespan",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "location",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "Location"
          },
          {
            "in": "query",
            "name": "hours",
            "schema": {
              "type": "number"
            },
            "required": true,
            "description": "Timespan in hours"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Data"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Missing required query parameter"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "No data found for the specified location and timespan"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/anomalies": {
      "get": {
        "summary": "Get anomalies",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Anomaly"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/requests": {
      "post": {
        "summary": "Create a new request (requires login)",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Request"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Request created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Request"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "get": {
        "summary": "Get all requests (requires admin role)",
        "description": "Retrieve a list of all requests",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "List of requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Request"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden (not an admin)"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/requests/{id}": {
      "get": {
        "summary": "Get request by ID (requires login)",
        "description": "Retrieve request information by ID",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "Request ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Request information",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Request"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Request not found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "summary": "Update request (requires admin role)",
        "description": "Update request information by ID",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "Request ID"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Request"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Updated request information",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Request"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden (not an admin)"
          },
          "404": {
            "description": "Request not found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "summary": "Delete request (requires admin role)",
        "description": "Delete request by ID",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "Request ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Request deleted successfully"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden (not an admin)"
          },
          "404": {
            "description": "Request not found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/requests/my-requests": {
      "get": {
        "summary": "Get all requests made by the user (requires login)",
        "description": "Retrieve all requests made by the authenticated user",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "tags": [
          "requests"
        ],
        "responses": {
          "200": {
            "description": "List of requests made by the user",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Request"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/users": {
      "post": {
        "summary": "Create a new user (requires admin role)",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden (not an admin)"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "get": {
        "summary": "Get all users (requires admin role)",
        "description": "Retrieve a list of all users",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "List of users",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden (not an admin)"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/users/{id}": {
      "get": {
        "summary": "Get user by ID (requires login)",
        "description": "Retrieve user information by ID",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "User ID"
          }
        ],
        "responses": {
          "200": {
            "description": "User information",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "User not found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "summary": "Update user (requires admin role)",
        "description": "Update user information by ID",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "User ID"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Updated user information",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden (not an admin)"
          },
          "404": {
            "description": "User not found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "summary": "Delete user (requires admin role)",
        "description": "Delete user by ID",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "User ID"
          }
        ],
        "responses": {
          "200": {
            "description": "User deleted successfully"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden (not an admin)"
          },
          "404": {
            "description": "User not found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "schemas": {
      "Anomaly": {
        "type": "object",
        "properties": {
          "timestamp": {
            "type": "string",
            "format": "date-time"
          },
          "location": {
            "type": "string"
          },
          "attribute": {
            "type": "string"
          },
          "value": {
            "type": "number"
          }
        },
        "required": [
          "timestamp",
          "location",
          "attribute",
          "value"
        ]
      },
      "SensorData": {
        "type": "object",
        "properties": {
          "timestamp": {
            "type": "string",
            "format": "date-time",
            "required": true
          },
          "location": {
            "type": "string",
            "required": true
          },
          "sensor_identifier": {
            "type": "string",
            "required": true
          },
          "temperature": {
            "type": "number"
          },
          "humidity": {
            "type": "number"
          },
          "wind_speed": {
            "type": "number"
          },
          "condition": {
            "type": "string"
          }
        }
      },
      "Location": {
        "type": "object",
        "properties": {
          "location_name": {
            "type": "string"
          },
          "sensor_identifier": {
            "type": "number"
          },
          "coordinates": {
            "type": "object",
            "properties": {
              "lat": {
                "type": "number"
              },
              "long": {
                "type": "number"
              }
            }
          }
        },
        "required": [
          "location_name",
          "sensor_identifier",
          "coordinates"
        ]
      },
      "Request": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "string",
            "format": "objectId"
          },
          "title": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "enum": [
              "pending",
              "approved",
              "rejected"
            ]
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "userId",
          "title",
          "description"
        ]
      },
      "User": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "role": {
            "type": "string"
          }
        },
        "required": [
          "username",
          "email",
          "password"
        ]
      }
    }
  },
  "tags": []
}